{"ast":null,"code":"import axios from'axios';//import { ListsApi } from 'todo-list-client'\n//const api = new ListsApi()\nconst lists=['Work Tasks','Personal Tasks','Shopping List'];const listItems={'Work Tasks':['Buy groceries','Complete React project','Exercise for 30 minutes','Read a book chapter'],'Personal Tasks':['Buy groceries','Complete React project','Exercise for 30 minutes','Read a book chapter'],'Shopping List':['Buy groceries','Complete React project','Exercise for 30 minutes','Read a book chapter']};export const apiClient={getLists:async()=>{return axios.get('http://localhost:3000/lists').then(response=>response.data);},addList:async listName=>{lists.push(listName);console.debug('-- addList',listName,lists);return Promise.resolve(lists);},getTodos:async listName=>{return Promise.resolve(listItems[listName]);},addTodo:async(listName,todo)=>{console.debug('-- addTodo',listName,todo,listItems);if(!listItems[listName]){listItems[listName]=[];}listItems[listName].push(todo);return Promise.resolve(listItems[listName]);}};","map":{"version":3,"names":["axios","lists","listItems","apiClient","getLists","get","then","response","data","addList","listName","push","console","debug","Promise","resolve","getTodos","addTodo","todo"],"sources":["/home/kaies/Desktop/todo-list/todolists-frontend/src/api-client.ts"],"sourcesContent":["import axios from 'axios'; \n\n//import { ListsApi } from 'todo-list-client'\n//const api = new ListsApi()\n\n\nconst lists = ['Work Tasks', 'Personal Tasks', 'Shopping List']\nconst listItems: Record<string, string[]> = {\n    'Work Tasks': ['Buy groceries', 'Complete React project', 'Exercise for 30 minutes', 'Read a book chapter'],\n    'Personal Tasks': ['Buy groceries', 'Complete React project', 'Exercise for 30 minutes', 'Read a book chapter'],\n    'Shopping List': ['Buy groceries', 'Complete React project', 'Exercise for 30 minutes', 'Read a book chapter']\n}\n\n\nexport const apiClient = {\n    getLists: async () => {\n        return axios.get('http://localhost:3000/lists').then((response) => response.data)\n    },\n    addList: async (listName: string) => {\n        lists.push(listName)\n        console.debug('-- addList', listName, lists);\n        return Promise.resolve(lists)\n    },\n    getTodos: async (listName: string): Promise<string[]> => {\n        return Promise.resolve(listItems[listName])\n    },\n    addTodo: async (listName: string, todo: string) => {\n        console.debug('-- addTodo', listName, todo, listItems);\n        if (!listItems[listName]) {\n            listItems[listName] = []\n        }\n        listItems[listName].push(todo)\n        return Promise.resolve(listItems[listName])\n    }\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA;AAGA,KAAM,CAAAC,KAAK,CAAG,CAAC,YAAY,CAAE,gBAAgB,CAAE,eAAe,CAAC,CAC/D,KAAM,CAAAC,SAAmC,CAAG,CACxC,YAAY,CAAE,CAAC,eAAe,CAAE,wBAAwB,CAAE,yBAAyB,CAAE,qBAAqB,CAAC,CAC3G,gBAAgB,CAAE,CAAC,eAAe,CAAE,wBAAwB,CAAE,yBAAyB,CAAE,qBAAqB,CAAC,CAC/G,eAAe,CAAE,CAAC,eAAe,CAAE,wBAAwB,CAAE,yBAAyB,CAAE,qBAAqB,CACjH,CAAC,CAGD,MAAO,MAAM,CAAAC,SAAS,CAAG,CACrBC,QAAQ,CAAE,KAAAA,CAAA,GAAY,CAClB,MAAO,CAAAJ,KAAK,CAACK,GAAG,CAAC,6BAA6B,CAAC,CAACC,IAAI,CAAEC,QAAQ,EAAKA,QAAQ,CAACC,IAAI,CAAC,CACrF,CAAC,CACDC,OAAO,CAAE,KAAO,CAAAC,QAAgB,EAAK,CACjCT,KAAK,CAACU,IAAI,CAACD,QAAQ,CAAC,CACpBE,OAAO,CAACC,KAAK,CAAC,YAAY,CAAEH,QAAQ,CAAET,KAAK,CAAC,CAC5C,MAAO,CAAAa,OAAO,CAACC,OAAO,CAACd,KAAK,CAAC,CACjC,CAAC,CACDe,QAAQ,CAAE,KAAO,CAAAN,QAAgB,EAAwB,CACrD,MAAO,CAAAI,OAAO,CAACC,OAAO,CAACb,SAAS,CAACQ,QAAQ,CAAC,CAAC,CAC/C,CAAC,CACDO,OAAO,CAAE,KAAAA,CAAOP,QAAgB,CAAEQ,IAAY,GAAK,CAC/CN,OAAO,CAACC,KAAK,CAAC,YAAY,CAAEH,QAAQ,CAAEQ,IAAI,CAAEhB,SAAS,CAAC,CACtD,GAAI,CAACA,SAAS,CAACQ,QAAQ,CAAC,CAAE,CACtBR,SAAS,CAACQ,QAAQ,CAAC,CAAG,EAAE,CAC5B,CACAR,SAAS,CAACQ,QAAQ,CAAC,CAACC,IAAI,CAACO,IAAI,CAAC,CAC9B,MAAO,CAAAJ,OAAO,CAACC,OAAO,CAACb,SAAS,CAACQ,QAAQ,CAAC,CAAC,CAC/C,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}