{"ast":null,"code":"import axios from 'axios';\n\n//import { ListsApi } from 'todo-list-client'\n//const api = new ListsApi()\n\n//const lists = ['Work Tasks', 'Personal Tasks', 'Shopping List']\n//const listItems: Record<string, string[]> = {\n//   'Work Tasks': ['Buy groceries', 'Complete React project', 'Exercise for 30 minutes', 'Read a book chapter'],\n//   'Personal Tasks': ['Buy groceries', 'Complete React project', 'Exercise for 30 minutes', 'Read a book chapter'],\n//  'Shopping List': ['Buy groceries', 'Complete React project', 'Exercise for 30 minutes', 'Read a book chapter']\n//}\n\nexport const apiClient = {\n  getLists: async () => {\n    const result = axios.get('http://localhost:3000/lists').then(res => res.data);\n    console.debug('-- getLists', result);\n    return result;\n  },\n  addList: async listName => {\n    const addedList = axios.post('http://localhost:3000/lists', {\n      id: listName,\n      description: listName\n    }).then(res => res.data);\n    console.debug('-- addList', listName, addedList);\n    return Promise.resolve(addedList);\n  },\n  getTodos: async listName => {\n    const res = axios.get(`http://localhost:3000/lists/${listName}/items`).then(res => res.data);\n    return Promise.resolve(listItems[listName]);\n  },\n  addTodo: async (listName, todo) => {\n    console.debug('-- addTodo', listName, todo, listItems);\n    if (!listItems[listName]) {\n      listItems[listName] = [];\n    }\n    listItems[listName].push(todo);\n    return Promise.resolve(listItems[listName]);\n  }\n};","map":{"version":3,"names":["axios","apiClient","getLists","result","get","then","res","data","console","debug","addList","listName","addedList","post","id","description","Promise","resolve","getTodos","listItems","addTodo","todo","push"],"sources":["/home/kaies/Desktop/todo-list/todolists-frontend/src/api-client.ts"],"sourcesContent":["import axios from 'axios'; \n\n//import { ListsApi } from 'todo-list-client'\n//const api = new ListsApi()\n\n\n//const lists = ['Work Tasks', 'Personal Tasks', 'Shopping List']\n//const listItems: Record<string, string[]> = {\n //   'Work Tasks': ['Buy groceries', 'Complete React project', 'Exercise for 30 minutes', 'Read a book chapter'],\n //   'Personal Tasks': ['Buy groceries', 'Complete React project', 'Exercise for 30 minutes', 'Read a book chapter'],\n  //  'Shopping List': ['Buy groceries', 'Complete React project', 'Exercise for 30 minutes', 'Read a book chapter']\n//}\n\n\nexport const apiClient = {\n    getLists: async () => {\n        const result = axios.get('http://localhost:3000/lists').then(res=>res.data);\n        console.debug('-- getLists', result);\n        return result\n    },\n    addList: async (listName: string) => {\n        const addedList = axios.post('http://localhost:3000/lists', {id: listName, description: listName}).then(res=>res.data)\n        \n        console.debug('-- addList', listName, addedList);\n        return Promise.resolve(addedList)\n    },\n    getTodos: async (listName: string): Promise<string[]> => {\n        const res = axios.get(`http://localhost:3000/lists/${listName}/items`).then(res=>res.data)\n        return Promise.resolve(listItems[listName])\n    },\n    addTodo: async (listName: string, todo: string) => {\n        console.debug('-- addTodo', listName, todo, listItems);\n        if (!listItems[listName]) {\n            listItems[listName] = []\n        }\n        listItems[listName].push(todo)\n        return Promise.resolve(listItems[listName])\n    }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;;AAGA;AACA;AACC;AACA;AACC;AACF;;AAGA,OAAO,MAAMC,SAAS,GAAG;EACrBC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IAClB,MAAMC,MAAM,GAAGH,KAAK,CAACI,GAAG,CAAC,6BAA6B,CAAC,CAACC,IAAI,CAACC,GAAG,IAAEA,GAAG,CAACC,IAAI,CAAC;IAC3EC,OAAO,CAACC,KAAK,CAAC,aAAa,EAAEN,MAAM,CAAC;IACpC,OAAOA,MAAM;EACjB,CAAC;EACDO,OAAO,EAAE,MAAOC,QAAgB,IAAK;IACjC,MAAMC,SAAS,GAAGZ,KAAK,CAACa,IAAI,CAAC,6BAA6B,EAAE;MAACC,EAAE,EAAEH,QAAQ;MAAEI,WAAW,EAAEJ;IAAQ,CAAC,CAAC,CAACN,IAAI,CAACC,GAAG,IAAEA,GAAG,CAACC,IAAI,CAAC;IAEtHC,OAAO,CAACC,KAAK,CAAC,YAAY,EAAEE,QAAQ,EAAEC,SAAS,CAAC;IAChD,OAAOI,OAAO,CAACC,OAAO,CAACL,SAAS,CAAC;EACrC,CAAC;EACDM,QAAQ,EAAE,MAAOP,QAAgB,IAAwB;IACrD,MAAML,GAAG,GAAGN,KAAK,CAACI,GAAG,CAAC,+BAA+BO,QAAQ,QAAQ,CAAC,CAACN,IAAI,CAACC,GAAG,IAAEA,GAAG,CAACC,IAAI,CAAC;IAC1F,OAAOS,OAAO,CAACC,OAAO,CAACE,SAAS,CAACR,QAAQ,CAAC,CAAC;EAC/C,CAAC;EACDS,OAAO,EAAE,MAAAA,CAAOT,QAAgB,EAAEU,IAAY,KAAK;IAC/Cb,OAAO,CAACC,KAAK,CAAC,YAAY,EAAEE,QAAQ,EAAEU,IAAI,EAAEF,SAAS,CAAC;IACtD,IAAI,CAACA,SAAS,CAACR,QAAQ,CAAC,EAAE;MACtBQ,SAAS,CAACR,QAAQ,CAAC,GAAG,EAAE;IAC5B;IACAQ,SAAS,CAACR,QAAQ,CAAC,CAACW,IAAI,CAACD,IAAI,CAAC;IAC9B,OAAOL,OAAO,CAACC,OAAO,CAACE,SAAS,CAACR,QAAQ,CAAC,CAAC;EAC/C;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}