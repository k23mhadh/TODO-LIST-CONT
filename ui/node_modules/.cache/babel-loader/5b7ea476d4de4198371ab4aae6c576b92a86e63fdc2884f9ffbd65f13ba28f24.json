{"ast":null,"code":"import{Button,Layout,List,Menu}from\"antd\";import{PlusOutlined}from'@ant-design/icons';import{apiClient}from\"./api-client\";import{useEffect,useState}from\"react\";import{ListForm}from\"./ListForm\";import{TodoForm}from\"./TodoForm\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const{Header,Content,Sider}=Layout;export default function App(){const[lists,setLists]=useState([]);const[selectedList,setSelectedList]=useState(null);const[showListForm,setShowListForm]=useState(false);const[showTodoForm,setShowTodoForm]=useState(false);const[selectedListItems,setSelectedListItems]=useState([]);useEffect(()=>{apiClient.getLists().then(setLists);},[]);useEffect(()=>{if(selectedList){apiClient.getTodos(selectedList).then(setSelectedListItems);}},[selectedList]);const handleItemClick=key=>{if(key==='add'){setSelectedList(null);setShowListForm(true);}else{setSelectedList(key);}};// TODO: fix any, use type from API\nconst items=lists.map(list=>({key:list,label:list}));function handleListAdded(listName){console.debug('-- handleListAdded',listName);apiClient.addList(listName).then(result=>{console.debug('-- handleListAdded result',result);setLists(result);});setShowListForm(false);}function handleTodoAdded(todo){if(selectedList){apiClient.addTodo(selectedList,todo).then(setSelectedListItems);}setShowTodoForm(false);}return/*#__PURE__*/_jsxs(Layout,{style:{minHeight:'100vh'},children:[/*#__PURE__*/_jsx(Header,{style:{display:'flex',alignItems:'center',color:'white'},children:\"TODO LISTS\"}),/*#__PURE__*/_jsxs(Layout,{children:[/*#__PURE__*/_jsx(Sider,{width:200,style:{background:'black'},children:/*#__PURE__*/_jsx(Menu,{theme:\"dark\",mode:\"inline\",items:[{key:'add',label:'Add list',icon:/*#__PURE__*/_jsx(PlusOutlined,{})},...items],onClick:e=>handleItemClick(e.key)})}),/*#__PURE__*/_jsxs(Content,{style:{padding:24,margin:0,minHeight:280},children:[showListForm&&/*#__PURE__*/_jsx(ListForm,{onListAdded:handleListAdded}),selectedList&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setShowTodoForm(true),children:\"Add Todo\"}),/*#__PURE__*/_jsx(List,{dataSource:selectedListItems,renderItem:item=>/*#__PURE__*/_jsx(List.Item,{children:item})})]}),!selectedList&&!showListForm&&/*#__PURE__*/_jsx(\"div\",{children:\"Select a list\"}),showTodoForm&&/*#__PURE__*/_jsx(TodoForm,{onTodoAdded:handleTodoAdded})]})]})]});}","map":{"version":3,"names":["Button","Layout","List","Menu","PlusOutlined","apiClient","useEffect","useState","ListForm","TodoForm","jsx","_jsx","jsxs","_jsxs","Header","Content","Sider","App","lists","setLists","selectedList","setSelectedList","showListForm","setShowListForm","showTodoForm","setShowTodoForm","selectedListItems","setSelectedListItems","getLists","then","getTodos","handleItemClick","key","items","map","list","label","handleListAdded","listName","console","debug","addList","result","handleTodoAdded","todo","addTodo","style","minHeight","children","display","alignItems","color","width","background","theme","mode","icon","onClick","e","padding","margin","onListAdded","dataSource","renderItem","item","Item","onTodoAdded"],"sources":["/home/kaies/Desktop/todo-list/todolists-frontend/src/App.tsx"],"sourcesContent":["import { Button, Layout, List, Menu, MenuProps } from \"antd\";\nimport { PlusOutlined } from '@ant-design/icons';\nimport { apiClient } from \"./api-client\";\nimport { useEffect, useState } from \"react\";\nimport { ListForm } from \"./ListForm\";\nimport { TodoForm } from \"./TodoForm\";\nconst { Header, Content, Sider } = Layout;\n\ntype MenuItem = Required<MenuProps>['items'][number];\n\nexport default function App() {\n  const [lists, setLists] = useState<string[]>([]);\n  const [selectedList, setSelectedList] = useState<string | null>(null);\n  const [showListForm, setShowListForm] = useState(false);\n  const [showTodoForm, setShowTodoForm] = useState(false);\n  const [selectedListItems, setSelectedListItems] = useState<string[]>([]);\n\n  useEffect(() => {\n    apiClient.getLists().then(setLists);\n  }, []);\n\n  useEffect(() => {\n    if (selectedList) {\n      apiClient.getTodos(selectedList).then(setSelectedListItems);\n    }\n  }, [selectedList]);\n\n  const handleItemClick = (key: string) => {\n    if (key === 'add') {\n      setSelectedList(null);\n      setShowListForm(true);\n    } else {\n      setSelectedList(key);\n    }\n  }\n\n  // TODO: fix any, use type from API\n  const items: MenuItem[] = lists.map((list: any) => ({\n    key: list,\n    label: list\n  }));\n\n  function handleListAdded(listName: string): void {\n    console.debug('-- handleListAdded', listName);\n    apiClient.addList(listName).then((result) => {\n      console.debug('-- handleListAdded result', result);\n      setLists(result)\n    });\n    setShowListForm(false);\n  }\n\n  function handleTodoAdded(todo: string): void {\n    if (selectedList) {\n      apiClient.addTodo(selectedList, todo).then(setSelectedListItems);\n    }\n    setShowTodoForm(false);\n  }\n\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Header style={{ display: 'flex', alignItems: 'center', color: 'white' }}>\n          TODO LISTS\n      </Header>\n      <Layout>\n        <Sider width={200} style={{ background: 'black' }}>\n          <Menu\n            theme=\"dark\"\n            mode=\"inline\"\n            items={[{key: 'add', label: 'Add list', icon: <PlusOutlined />}, ...items]}\n            onClick={(e) => handleItemClick(e.key)}\n          />\n        </Sider>\n        <Content\n          style={{\n          padding: 24,\n          margin: 0,\n          minHeight: 280,\n          }}    \n        >\n          {showListForm && <ListForm onListAdded={handleListAdded} />}\n          {selectedList && \n            <div>\n              <Button onClick={() => setShowTodoForm(true)}>Add Todo</Button>\n              <List\n                dataSource={selectedListItems}\n                renderItem={(item) => <List.Item>{item}</List.Item>}\n              />\n            </div>\n          }\n          {!selectedList && !showListForm && <div>Select a list</div>}    \n          {showTodoForm && <TodoForm onTodoAdded={handleTodoAdded} />}\n        </Content>\n      </Layout>\n    </Layout>\n  )\n}"],"mappings":"AAAA,OAASA,MAAM,CAAEC,MAAM,CAAEC,IAAI,CAAEC,IAAI,KAAmB,MAAM,CAC5D,OAASC,YAAY,KAAQ,mBAAmB,CAChD,OAASC,SAAS,KAAQ,cAAc,CACxC,OAASC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,OAASC,QAAQ,KAAQ,YAAY,CACrC,OAASC,QAAQ,KAAQ,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACtC,KAAM,CAAEC,MAAM,CAAEC,OAAO,CAAEC,KAAM,CAAC,CAAGf,MAAM,CAIzC,cAAe,SAAS,CAAAgB,GAAGA,CAAA,CAAG,CAC5B,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAW,EAAE,CAAC,CAChD,KAAM,CAACa,YAAY,CAAEC,eAAe,CAAC,CAAGd,QAAQ,CAAgB,IAAI,CAAC,CACrE,KAAM,CAACe,YAAY,CAAEC,eAAe,CAAC,CAAGhB,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAACiB,YAAY,CAAEC,eAAe,CAAC,CAAGlB,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAACmB,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGpB,QAAQ,CAAW,EAAE,CAAC,CAExED,SAAS,CAAC,IAAM,CACdD,SAAS,CAACuB,QAAQ,CAAC,CAAC,CAACC,IAAI,CAACV,QAAQ,CAAC,CACrC,CAAC,CAAE,EAAE,CAAC,CAENb,SAAS,CAAC,IAAM,CACd,GAAIc,YAAY,CAAE,CAChBf,SAAS,CAACyB,QAAQ,CAACV,YAAY,CAAC,CAACS,IAAI,CAACF,oBAAoB,CAAC,CAC7D,CACF,CAAC,CAAE,CAACP,YAAY,CAAC,CAAC,CAElB,KAAM,CAAAW,eAAe,CAAIC,GAAW,EAAK,CACvC,GAAIA,GAAG,GAAK,KAAK,CAAE,CACjBX,eAAe,CAAC,IAAI,CAAC,CACrBE,eAAe,CAAC,IAAI,CAAC,CACvB,CAAC,IAAM,CACLF,eAAe,CAACW,GAAG,CAAC,CACtB,CACF,CAAC,CAED;AACA,KAAM,CAAAC,KAAiB,CAAGf,KAAK,CAACgB,GAAG,CAAEC,IAAS,GAAM,CAClDH,GAAG,CAAEG,IAAI,CACTC,KAAK,CAAED,IACT,CAAC,CAAC,CAAC,CAEH,QAAS,CAAAE,eAAeA,CAACC,QAAgB,CAAQ,CAC/CC,OAAO,CAACC,KAAK,CAAC,oBAAoB,CAAEF,QAAQ,CAAC,CAC7CjC,SAAS,CAACoC,OAAO,CAACH,QAAQ,CAAC,CAACT,IAAI,CAAEa,MAAM,EAAK,CAC3CH,OAAO,CAACC,KAAK,CAAC,2BAA2B,CAAEE,MAAM,CAAC,CAClDvB,QAAQ,CAACuB,MAAM,CAAC,CAClB,CAAC,CAAC,CACFnB,eAAe,CAAC,KAAK,CAAC,CACxB,CAEA,QAAS,CAAAoB,eAAeA,CAACC,IAAY,CAAQ,CAC3C,GAAIxB,YAAY,CAAE,CAChBf,SAAS,CAACwC,OAAO,CAACzB,YAAY,CAAEwB,IAAI,CAAC,CAACf,IAAI,CAACF,oBAAoB,CAAC,CAClE,CACAF,eAAe,CAAC,KAAK,CAAC,CACxB,CAEA,mBACEZ,KAAA,CAACZ,MAAM,EAAC6C,KAAK,CAAE,CAAEC,SAAS,CAAE,OAAQ,CAAE,CAAAC,QAAA,eACpCrC,IAAA,CAACG,MAAM,EAACgC,KAAK,CAAE,CAAEG,OAAO,CAAE,MAAM,CAAEC,UAAU,CAAE,QAAQ,CAAEC,KAAK,CAAE,OAAQ,CAAE,CAAAH,QAAA,CAAC,YAE1E,CAAQ,CAAC,cACTnC,KAAA,CAACZ,MAAM,EAAA+C,QAAA,eACLrC,IAAA,CAACK,KAAK,EAACoC,KAAK,CAAE,GAAI,CAACN,KAAK,CAAE,CAAEO,UAAU,CAAE,OAAQ,CAAE,CAAAL,QAAA,cAChDrC,IAAA,CAACR,IAAI,EACHmD,KAAK,CAAC,MAAM,CACZC,IAAI,CAAC,QAAQ,CACbtB,KAAK,CAAE,CAAC,CAACD,GAAG,CAAE,KAAK,CAAEI,KAAK,CAAE,UAAU,CAAEoB,IAAI,cAAE7C,IAAA,CAACP,YAAY,GAAE,CAAC,CAAC,CAAE,GAAG6B,KAAK,CAAE,CAC3EwB,OAAO,CAAGC,CAAC,EAAK3B,eAAe,CAAC2B,CAAC,CAAC1B,GAAG,CAAE,CACxC,CAAC,CACG,CAAC,cACRnB,KAAA,CAACE,OAAO,EACN+B,KAAK,CAAE,CACPa,OAAO,CAAE,EAAE,CACXC,MAAM,CAAE,CAAC,CACTb,SAAS,CAAE,GACX,CAAE,CAAAC,QAAA,EAED1B,YAAY,eAAIX,IAAA,CAACH,QAAQ,EAACqD,WAAW,CAAExB,eAAgB,CAAE,CAAC,CAC1DjB,YAAY,eACXP,KAAA,QAAAmC,QAAA,eACErC,IAAA,CAACX,MAAM,EAACyD,OAAO,CAAEA,CAAA,GAAMhC,eAAe,CAAC,IAAI,CAAE,CAAAuB,QAAA,CAAC,UAAQ,CAAQ,CAAC,cAC/DrC,IAAA,CAACT,IAAI,EACH4D,UAAU,CAAEpC,iBAAkB,CAC9BqC,UAAU,CAAGC,IAAI,eAAKrD,IAAA,CAACT,IAAI,CAAC+D,IAAI,EAAAjB,QAAA,CAAEgB,IAAI,CAAY,CAAE,CACrD,CAAC,EACC,CAAC,CAEP,CAAC5C,YAAY,EAAI,CAACE,YAAY,eAAIX,IAAA,QAAAqC,QAAA,CAAK,eAAa,CAAK,CAAC,CAC1DxB,YAAY,eAAIb,IAAA,CAACF,QAAQ,EAACyD,WAAW,CAAEvB,eAAgB,CAAE,CAAC,EACpD,CAAC,EACJ,CAAC,EACH,CAAC,CAEb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}