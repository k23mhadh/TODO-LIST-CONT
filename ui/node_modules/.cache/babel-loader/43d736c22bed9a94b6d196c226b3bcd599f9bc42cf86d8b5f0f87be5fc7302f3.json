{"ast":null,"code":"import{ListsApi}from'todo-list-client';const api=new ListsApi();const lists=['Work Tasks','Personal Tasks','Shopping List'];const listItems={'Work Tasks':['Buy groceries','Complete React project','Exercise for 30 minutes','Read a book chapter'],'Personal Tasks':['Buy groceries','Complete React project','Exercise for 30 minutes','Read a book chapter'],'Shopping List':['Buy groceries','Complete React project','Exercise for 30 minutes','Read a book chapter']};export const apiClient={getLists:async()=>{return api.listsGet();},addList:async listName=>{lists.push(listName);console.debug('-- addList',listName,lists);return Promise.resolve(lists);},getTodos:async listName=>{return Promise.resolve(listItems[listName]);},addTodo:async(listName,todo)=>{console.debug('-- addTodo',listName,todo,listItems);if(!listItems[listName]){listItems[listName]=[];}listItems[listName].push(todo);return Promise.resolve(listItems[listName]);}};","map":{"version":3,"names":["ListsApi","api","lists","listItems","apiClient","getLists","listsGet","addList","listName","push","console","debug","Promise","resolve","getTodos","addTodo","todo"],"sources":["/home/kaies/Desktop/todo-list/todolists-frontend/src/api-client.ts"],"sourcesContent":["import { ListsApi } from 'todo-list-client'\nconst api = new ListsApi()\n\n\nconst lists = ['Work Tasks', 'Personal Tasks', 'Shopping List']\nconst listItems: Record<string, string[]> = {\n    'Work Tasks': ['Buy groceries', 'Complete React project', 'Exercise for 30 minutes', 'Read a book chapter'],\n    'Personal Tasks': ['Buy groceries', 'Complete React project', 'Exercise for 30 minutes', 'Read a book chapter'],\n    'Shopping List': ['Buy groceries', 'Complete React project', 'Exercise for 30 minutes', 'Read a book chapter']\n}\n\n\nexport const apiClient = {\n    getLists: async () => {\n        return api.listsGet()\n    },\n    addList: async (listName: string) => {\n        lists.push(listName)\n        console.debug('-- addList', listName, lists);\n        return Promise.resolve(lists)\n    },\n    getTodos: async (listName: string): Promise<string[]> => {\n        return Promise.resolve(listItems[listName])\n    },\n    addTodo: async (listName: string, todo: string) => {\n        console.debug('-- addTodo', listName, todo, listItems);\n        if (!listItems[listName]) {\n            listItems[listName] = []\n        }\n        listItems[listName].push(todo)\n        return Promise.resolve(listItems[listName])\n    }\n}\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,kBAAkB,CAC3C,KAAM,CAAAC,GAAG,CAAG,GAAI,CAAAD,QAAQ,CAAC,CAAC,CAG1B,KAAM,CAAAE,KAAK,CAAG,CAAC,YAAY,CAAE,gBAAgB,CAAE,eAAe,CAAC,CAC/D,KAAM,CAAAC,SAAmC,CAAG,CACxC,YAAY,CAAE,CAAC,eAAe,CAAE,wBAAwB,CAAE,yBAAyB,CAAE,qBAAqB,CAAC,CAC3G,gBAAgB,CAAE,CAAC,eAAe,CAAE,wBAAwB,CAAE,yBAAyB,CAAE,qBAAqB,CAAC,CAC/G,eAAe,CAAE,CAAC,eAAe,CAAE,wBAAwB,CAAE,yBAAyB,CAAE,qBAAqB,CACjH,CAAC,CAGD,MAAO,MAAM,CAAAC,SAAS,CAAG,CACrBC,QAAQ,CAAE,KAAAA,CAAA,GAAY,CAClB,MAAO,CAAAJ,GAAG,CAACK,QAAQ,CAAC,CAAC,CACzB,CAAC,CACDC,OAAO,CAAE,KAAO,CAAAC,QAAgB,EAAK,CACjCN,KAAK,CAACO,IAAI,CAACD,QAAQ,CAAC,CACpBE,OAAO,CAACC,KAAK,CAAC,YAAY,CAAEH,QAAQ,CAAEN,KAAK,CAAC,CAC5C,MAAO,CAAAU,OAAO,CAACC,OAAO,CAACX,KAAK,CAAC,CACjC,CAAC,CACDY,QAAQ,CAAE,KAAO,CAAAN,QAAgB,EAAwB,CACrD,MAAO,CAAAI,OAAO,CAACC,OAAO,CAACV,SAAS,CAACK,QAAQ,CAAC,CAAC,CAC/C,CAAC,CACDO,OAAO,CAAE,KAAAA,CAAOP,QAAgB,CAAEQ,IAAY,GAAK,CAC/CN,OAAO,CAACC,KAAK,CAAC,YAAY,CAAEH,QAAQ,CAAEQ,IAAI,CAAEb,SAAS,CAAC,CACtD,GAAI,CAACA,SAAS,CAACK,QAAQ,CAAC,CAAE,CACtBL,SAAS,CAACK,QAAQ,CAAC,CAAG,EAAE,CAC5B,CACAL,SAAS,CAACK,QAAQ,CAAC,CAACC,IAAI,CAACO,IAAI,CAAC,CAC9B,MAAO,CAAAJ,OAAO,CAACC,OAAO,CAACV,SAAS,CAACK,QAAQ,CAAC,CAAC,CAC/C,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}