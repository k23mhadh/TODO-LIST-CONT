{"ast":null,"code":"var _jsxFileName = \"/home/kaies/Desktop/todo-list/ui/src/EditForm.tsx\",\n  _s = $RefreshSig$();\nimport { Form, Input, Button, Select } from 'antd';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EditForm = ({\n  initialValues,\n  onTodoSubmit\n}) => {\n  _s();\n  const [form] = Form.useForm();\n\n  // Populate the form with initial values when they are provided\n  useEffect(() => {\n    if (initialValues) {\n      form.setFieldsValue(initialValues);\n    }\n  }, [initialValues, form]);\n  const handleSubmit = values => {\n    if (onTodoSubmit) {\n      onTodoSubmit(values);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    onFinish: handleSubmit,\n    layout: \"inline\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"nom\",\n      rules: [{\n        required: true,\n        message: 'Please enter a todo item name'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Enter todo item name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"description\",\n      rules: [{\n        required: false,\n        message: 'Please enter a description'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Enter todo description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"status\",\n      rules: [{\n        required: true,\n        message: 'Please select a status'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        placeholder: \"Select status\",\n        children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n          value: \"pending\",\n          children: \"PENDING\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n          value: \"done\",\n          children: \"DONE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n          value: \"inprogress\",\n          children: \"IN PROGRESS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: initialValues ? 'Update Todo' : 'Add Todo'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(EditForm, \"hm6PaQ/QYB/X6ENq1nmkdh1TV0k=\", false, function () {\n  return [Form.useForm];\n});\n_c = EditForm;\nvar _c;\n$RefreshReg$(_c, \"EditForm\");","map":{"version":3,"names":["Form","Input","Button","Select","useEffect","jsxDEV","_jsxDEV","EditForm","initialValues","onTodoSubmit","_s","form","useForm","setFieldsValue","handleSubmit","values","onFinish","layout","children","Item","name","rules","required","message","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","Option","value","type","htmlType","_c","$RefreshReg$"],"sources":["/home/kaies/Desktop/todo-list/ui/src/EditForm.tsx"],"sourcesContent":["import { Form, Input, Button, Select } from 'antd';\nimport { useEffect } from 'react';\nimport { Status } from '../enum';\n\ninterface TodoFormProps {\n  initialValues?: { nom: string; description: string; status: Status };\n  onTodoSubmit?: (todoValue: { nom: string; description: string; status: Status }) => void;\n}\n\nexport const EditForm = ({ initialValues, onTodoSubmit }: TodoFormProps) => {\n  const [form] = Form.useForm();\n\n  // Populate the form with initial values when they are provided\n  useEffect(() => {\n    if (initialValues) {\n      form.setFieldsValue(initialValues);\n    }\n  }, [initialValues, form]);\n\n  const handleSubmit = (values: { nom: string; description: string; status: Status }) => {\n    if (onTodoSubmit) {\n      onTodoSubmit(values);\n    }\n  };\n\n  return (\n    <Form\n      form={form}\n      onFinish={handleSubmit}\n      layout=\"inline\"\n    >\n      <Form.Item\n        name=\"nom\"\n        rules={[{ required: true, message: 'Please enter a todo item name' }]}\n      >\n        <Input placeholder=\"Enter todo item name\" />\n      </Form.Item>\n\n      <Form.Item\n        name=\"description\"\n        rules={[{ required: false, message: 'Please enter a description' }]}\n      >\n        <Input placeholder=\"Enter todo description\" />\n      </Form.Item>\n\n      <Form.Item\n        name=\"status\"\n        rules={[{ required: true, message: 'Please select a status' }]}\n      >\n        <Select placeholder=\"Select status\">\n          <Select.Option value=\"pending\">PENDING</Select.Option>\n          <Select.Option value=\"done\">DONE</Select.Option>\n          <Select.Option value=\"inprogress\">IN PROGRESS</Select.Option>\n        </Select>\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          {initialValues ? 'Update Todo' : 'Add Todo'}\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,MAAM,QAAQ,MAAM;AAClD,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQlC,OAAO,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,aAAa;EAAEC;AAA4B,CAAC,KAAK;EAAAC,EAAA;EAC1E,MAAM,CAACC,IAAI,CAAC,GAAGX,IAAI,CAACY,OAAO,CAAC,CAAC;;EAE7B;EACAR,SAAS,CAAC,MAAM;IACd,IAAII,aAAa,EAAE;MACjBG,IAAI,CAACE,cAAc,CAACL,aAAa,CAAC;IACpC;EACF,CAAC,EAAE,CAACA,aAAa,EAAEG,IAAI,CAAC,CAAC;EAEzB,MAAMG,YAAY,GAAIC,MAA4D,IAAK;IACrF,IAAIN,YAAY,EAAE;MAChBA,YAAY,CAACM,MAAM,CAAC;IACtB;EACF,CAAC;EAED,oBACET,OAAA,CAACN,IAAI;IACHW,IAAI,EAAEA,IAAK;IACXK,QAAQ,EAAEF,YAAa;IACvBG,MAAM,EAAC,QAAQ;IAAAC,QAAA,gBAEfZ,OAAA,CAACN,IAAI,CAACmB,IAAI;MACRC,IAAI,EAAC,KAAK;MACVC,KAAK,EAAE,CAAC;QAAEC,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE;MAAgC,CAAC,CAAE;MAAAL,QAAA,eAEtEZ,OAAA,CAACL,KAAK;QAACuB,WAAW,EAAC;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eAEZtB,OAAA,CAACN,IAAI,CAACmB,IAAI;MACRC,IAAI,EAAC,aAAa;MAClBC,KAAK,EAAE,CAAC;QAAEC,QAAQ,EAAE,KAAK;QAAEC,OAAO,EAAE;MAA6B,CAAC,CAAE;MAAAL,QAAA,eAEpEZ,OAAA,CAACL,KAAK;QAACuB,WAAW,EAAC;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eAEZtB,OAAA,CAACN,IAAI,CAACmB,IAAI;MACRC,IAAI,EAAC,QAAQ;MACbC,KAAK,EAAE,CAAC;QAAEC,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE;MAAyB,CAAC,CAAE;MAAAL,QAAA,eAE/DZ,OAAA,CAACH,MAAM;QAACqB,WAAW,EAAC,eAAe;QAAAN,QAAA,gBACjCZ,OAAA,CAACH,MAAM,CAAC0B,MAAM;UAACC,KAAK,EAAC,SAAS;UAAAZ,QAAA,EAAC;QAAO;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC,eACtDtB,OAAA,CAACH,MAAM,CAAC0B,MAAM;UAACC,KAAK,EAAC,MAAM;UAAAZ,QAAA,EAAC;QAAI;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC,eAChDtB,OAAA,CAACH,MAAM,CAAC0B,MAAM;UAACC,KAAK,EAAC,YAAY;UAAAZ,QAAA,EAAC;QAAW;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAEZtB,OAAA,CAACN,IAAI,CAACmB,IAAI;MAAAD,QAAA,eACRZ,OAAA,CAACJ,MAAM;QAAC6B,IAAI,EAAC,SAAS;QAACC,QAAQ,EAAC,QAAQ;QAAAd,QAAA,EACrCV,aAAa,GAAG,aAAa,GAAG;MAAU;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEX,CAAC;AAAClB,EAAA,CAtDWH,QAAQ;EAAA,QACJP,IAAI,CAACY,OAAO;AAAA;AAAAqB,EAAA,GADhB1B,QAAQ;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}