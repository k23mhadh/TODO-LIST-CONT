{"ast":null,"code":"import{Form,Input,Button,Select}from'antd';import{useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const EditForm=_ref=>{let{initialValues,onTodoSubmit}=_ref;const[form]=Form.useForm();// Populate the form with initial values when they are provided\nuseEffect(()=>{if(initialValues){form.setFieldsValue(initialValues);}},[initialValues,form]);const handleSubmit=values=>{if(onTodoSubmit){onTodoSubmit(values);}};return/*#__PURE__*/_jsxs(Form,{form:form,onFinish:handleSubmit,layout:\"inline\",children:[/*#__PURE__*/_jsx(Form.Item,{name:\"todo\",rules:[{required:true,message:'Please enter a todo item'}],children:/*#__PURE__*/_jsx(Input,{placeholder:\"Enter todo item\"})}),/*#__PURE__*/_jsx(Form.Item,{name:\"description\",rules:[{required:false,message:'Please enter a description'}],children:/*#__PURE__*/_jsx(Input,{placeholder:\"Enter todo description\"})}),/*#__PURE__*/_jsx(Form.Item,{name:\"status\",rules:[{required:true,message:'Please select a status'}],children:/*#__PURE__*/_jsxs(Select,{placeholder:\"Select status\",children:[/*#__PURE__*/_jsx(Select.Option,{value:\"pending\",children:\"PENDING\"}),/*#__PURE__*/_jsx(Select.Option,{value:\"done\",children:\"DONE\"}),/*#__PURE__*/_jsx(Select.Option,{value:\"inprogress\",children:\"IN PROGRESS\"})]})}),/*#__PURE__*/_jsx(Form.Item,{children:/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",children:initialValues?'Update Todo':'Add Todo'})})]});};","map":{"version":3,"names":["Form","Input","Button","Select","useEffect","jsx","_jsx","jsxs","_jsxs","EditForm","_ref","initialValues","onTodoSubmit","form","useForm","setFieldsValue","handleSubmit","values","onFinish","layout","children","Item","name","rules","required","message","placeholder","Option","value","type","htmlType"],"sources":["/home/kaies/Desktop/todo-list/ui/src/EditForm.tsx"],"sourcesContent":["import { Form, Input, Button, Select } from 'antd';\nimport { useEffect } from 'react';\nimport { Status } from '../enum';\n\ninterface TodoFormProps {\n  initialValues?: { nom: string; description: string; status: Status };\n  onTodoSubmit?: (todoValue: { nom: string; description: string; status: Status }) => void;\n}\n\nexport const EditForm = ({ initialValues, onTodoSubmit }: TodoFormProps) => {\n  const [form] = Form.useForm();\n\n  // Populate the form with initial values when they are provided\n  useEffect(() => {\n    if (initialValues) {\n      form.setFieldsValue(initialValues);\n    }\n  }, [initialValues, form]);\n\n  const handleSubmit = (values: { nom: string; description: string; status: Status }) => {\n    if (onTodoSubmit) {\n      onTodoSubmit(values);\n    }\n  };\n\n  return (\n    <Form\n      form={form}\n      onFinish={handleSubmit}\n      layout=\"inline\"\n    >\n      <Form.Item\n        name=\"todo\"\n        rules={[{ required: true, message: 'Please enter a todo item' }]}\n      >\n        <Input placeholder=\"Enter todo item\" />\n      </Form.Item>\n\n      <Form.Item\n        name=\"description\"\n        rules={[{ required: false, message: 'Please enter a description' }]}\n      >\n        <Input placeholder=\"Enter todo description\" />\n      </Form.Item>\n\n      <Form.Item\n        name=\"status\"\n        rules={[{ required: true, message: 'Please select a status' }]}\n      >\n        <Select placeholder=\"Select status\">\n          <Select.Option value=\"pending\">PENDING</Select.Option>\n          <Select.Option value=\"done\">DONE</Select.Option>\n          <Select.Option value=\"inprogress\">IN PROGRESS</Select.Option>\n        </Select>\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          {initialValues ? 'Update Todo' : 'Add Todo'}\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n"],"mappings":"AAAA,OAASA,IAAI,CAAEC,KAAK,CAAEC,MAAM,CAAEC,MAAM,KAAQ,MAAM,CAClD,OAASC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAQlC,MAAO,MAAM,CAAAC,QAAQ,CAAGC,IAAA,EAAoD,IAAnD,CAAEC,aAAa,CAAEC,YAA4B,CAAC,CAAAF,IAAA,CACrE,KAAM,CAACG,IAAI,CAAC,CAAGb,IAAI,CAACc,OAAO,CAAC,CAAC,CAE7B;AACAV,SAAS,CAAC,IAAM,CACd,GAAIO,aAAa,CAAE,CACjBE,IAAI,CAACE,cAAc,CAACJ,aAAa,CAAC,CACpC,CACF,CAAC,CAAE,CAACA,aAAa,CAAEE,IAAI,CAAC,CAAC,CAEzB,KAAM,CAAAG,YAAY,CAAIC,MAA4D,EAAK,CACrF,GAAIL,YAAY,CAAE,CAChBA,YAAY,CAACK,MAAM,CAAC,CACtB,CACF,CAAC,CAED,mBACET,KAAA,CAACR,IAAI,EACHa,IAAI,CAAEA,IAAK,CACXK,QAAQ,CAAEF,YAAa,CACvBG,MAAM,CAAC,QAAQ,CAAAC,QAAA,eAEfd,IAAA,CAACN,IAAI,CAACqB,IAAI,EACRC,IAAI,CAAC,MAAM,CACXC,KAAK,CAAE,CAAC,CAAEC,QAAQ,CAAE,IAAI,CAAEC,OAAO,CAAE,0BAA2B,CAAC,CAAE,CAAAL,QAAA,cAEjEd,IAAA,CAACL,KAAK,EAACyB,WAAW,CAAC,iBAAiB,CAAE,CAAC,CAC9B,CAAC,cAEZpB,IAAA,CAACN,IAAI,CAACqB,IAAI,EACRC,IAAI,CAAC,aAAa,CAClBC,KAAK,CAAE,CAAC,CAAEC,QAAQ,CAAE,KAAK,CAAEC,OAAO,CAAE,4BAA6B,CAAC,CAAE,CAAAL,QAAA,cAEpEd,IAAA,CAACL,KAAK,EAACyB,WAAW,CAAC,wBAAwB,CAAE,CAAC,CACrC,CAAC,cAEZpB,IAAA,CAACN,IAAI,CAACqB,IAAI,EACRC,IAAI,CAAC,QAAQ,CACbC,KAAK,CAAE,CAAC,CAAEC,QAAQ,CAAE,IAAI,CAAEC,OAAO,CAAE,wBAAyB,CAAC,CAAE,CAAAL,QAAA,cAE/DZ,KAAA,CAACL,MAAM,EAACuB,WAAW,CAAC,eAAe,CAAAN,QAAA,eACjCd,IAAA,CAACH,MAAM,CAACwB,MAAM,EAACC,KAAK,CAAC,SAAS,CAAAR,QAAA,CAAC,SAAO,CAAe,CAAC,cACtDd,IAAA,CAACH,MAAM,CAACwB,MAAM,EAACC,KAAK,CAAC,MAAM,CAAAR,QAAA,CAAC,MAAI,CAAe,CAAC,cAChDd,IAAA,CAACH,MAAM,CAACwB,MAAM,EAACC,KAAK,CAAC,YAAY,CAAAR,QAAA,CAAC,aAAW,CAAe,CAAC,EACvD,CAAC,CACA,CAAC,cAEZd,IAAA,CAACN,IAAI,CAACqB,IAAI,EAAAD,QAAA,cACRd,IAAA,CAACJ,MAAM,EAAC2B,IAAI,CAAC,SAAS,CAACC,QAAQ,CAAC,QAAQ,CAAAV,QAAA,CACrCT,aAAa,CAAG,aAAa,CAAG,UAAU,CACrC,CAAC,CACA,CAAC,EACR,CAAC,CAEX,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}