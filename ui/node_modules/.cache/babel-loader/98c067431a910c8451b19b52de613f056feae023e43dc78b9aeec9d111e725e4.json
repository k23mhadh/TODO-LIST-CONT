{"ast":null,"code":"import axios from 'axios';\n\n//import { ListsApi } from 'todo-list-client'\n//const api = new ListsApi()\n\nconst lists = ['Work Tasks', 'Personal Tasks', 'Shopping List'];\nconst listItems = {\n  'Work Tasks': ['Buy groceries', 'Complete React project', 'Exercise for 30 minutes', 'Read a book chapter'],\n  'Personal Tasks': ['Buy groceries', 'Complete React project', 'Exercise for 30 minutes', 'Read a book chapter'],\n  'Shopping List': ['Buy groceries', 'Complete React project', 'Exercise for 30 minutes', 'Read a book chapter']\n};\nexport const apiClient = {\n  getLists: async () => {\n    return axios.get('http://localhost:3000/lists').then(res => res.data);\n  },\n  addList: async listName => {\n    lists.push(listName);\n    console.debug('-- addList', listName, lists);\n    return Promise.resolve(lists);\n  },\n  getTodos: async listName => {\n    return Promise.resolve(listItems[listName]);\n  },\n  addTodo: async (listName, todo) => {\n    console.debug('-- addTodo', listName, todo, listItems);\n    if (!listItems[listName]) {\n      listItems[listName] = [];\n    }\n    listItems[listName].push(todo);\n    return Promise.resolve(listItems[listName]);\n  }\n};","map":{"version":3,"names":["axios","lists","listItems","apiClient","getLists","get","then","res","data","addList","listName","push","console","debug","Promise","resolve","getTodos","addTodo","todo"],"sources":["/home/kaies/Desktop/todo-list/todolists-frontend/src/api-client.ts"],"sourcesContent":["import axios from 'axios'; \n\n//import { ListsApi } from 'todo-list-client'\n//const api = new ListsApi()\n\n\nconst lists = ['Work Tasks', 'Personal Tasks', 'Shopping List']\nconst listItems: Record<string, string[]> = {\n    'Work Tasks': ['Buy groceries', 'Complete React project', 'Exercise for 30 minutes', 'Read a book chapter'],\n    'Personal Tasks': ['Buy groceries', 'Complete React project', 'Exercise for 30 minutes', 'Read a book chapter'],\n    'Shopping List': ['Buy groceries', 'Complete React project', 'Exercise for 30 minutes', 'Read a book chapter']\n}\n\n\nexport const apiClient = {\n    getLists: async () => {\n        return axios.get('http://localhost:3000/lists').then(res=>res.data)\n    },\n    addList: async (listName: string) => {\n        lists.push(listName)\n        console.debug('-- addList', listName, lists);\n        return Promise.resolve(lists)\n    },\n    getTodos: async (listName: string): Promise<string[]> => {\n        return Promise.resolve(listItems[listName])\n    },\n    addTodo: async (listName: string, todo: string) => {\n        console.debug('-- addTodo', listName, todo, listItems);\n        if (!listItems[listName]) {\n            listItems[listName] = []\n        }\n        listItems[listName].push(todo)\n        return Promise.resolve(listItems[listName])\n    }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;;AAGA,MAAMC,KAAK,GAAG,CAAC,YAAY,EAAE,gBAAgB,EAAE,eAAe,CAAC;AAC/D,MAAMC,SAAmC,GAAG;EACxC,YAAY,EAAE,CAAC,eAAe,EAAE,wBAAwB,EAAE,yBAAyB,EAAE,qBAAqB,CAAC;EAC3G,gBAAgB,EAAE,CAAC,eAAe,EAAE,wBAAwB,EAAE,yBAAyB,EAAE,qBAAqB,CAAC;EAC/G,eAAe,EAAE,CAAC,eAAe,EAAE,wBAAwB,EAAE,yBAAyB,EAAE,qBAAqB;AACjH,CAAC;AAGD,OAAO,MAAMC,SAAS,GAAG;EACrBC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IAClB,OAAOJ,KAAK,CAACK,GAAG,CAAC,6BAA6B,CAAC,CAACC,IAAI,CAACC,GAAG,IAAEA,GAAG,CAACC,IAAI,CAAC;EACvE,CAAC;EACDC,OAAO,EAAE,MAAOC,QAAgB,IAAK;IACjCT,KAAK,CAACU,IAAI,CAACD,QAAQ,CAAC;IACpBE,OAAO,CAACC,KAAK,CAAC,YAAY,EAAEH,QAAQ,EAAET,KAAK,CAAC;IAC5C,OAAOa,OAAO,CAACC,OAAO,CAACd,KAAK,CAAC;EACjC,CAAC;EACDe,QAAQ,EAAE,MAAON,QAAgB,IAAwB;IACrD,OAAOI,OAAO,CAACC,OAAO,CAACb,SAAS,CAACQ,QAAQ,CAAC,CAAC;EAC/C,CAAC;EACDO,OAAO,EAAE,MAAAA,CAAOP,QAAgB,EAAEQ,IAAY,KAAK;IAC/CN,OAAO,CAACC,KAAK,CAAC,YAAY,EAAEH,QAAQ,EAAEQ,IAAI,EAAEhB,SAAS,CAAC;IACtD,IAAI,CAACA,SAAS,CAACQ,QAAQ,CAAC,EAAE;MACtBR,SAAS,CAACQ,QAAQ,CAAC,GAAG,EAAE;IAC5B;IACAR,SAAS,CAACQ,QAAQ,CAAC,CAACC,IAAI,CAACO,IAAI,CAAC;IAC9B,OAAOJ,OAAO,CAACC,OAAO,CAACb,SAAS,CAACQ,QAAQ,CAAC,CAAC;EAC/C;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}