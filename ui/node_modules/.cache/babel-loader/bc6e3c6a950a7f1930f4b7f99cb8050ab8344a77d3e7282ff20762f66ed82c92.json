{"ast":null,"code":"import{Button,Layout,List,Menu}from\"antd\";import{PlusOutlined}from'@ant-design/icons';import{apiClient}from\"./api-client\";import{useEffect,useState}from\"react\";import{ListForm}from\"./ListForm\";import{TodoForm}from\"./TodoForm\";import{EditForm}from\"./EditForm\";import'./Styles/Style.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const{Header,Content,Sider}=Layout;export default function App(){const[lists,setLists]=useState([]);const[selectedList,setSelectedList]=useState(null);const[showListForm,setShowListForm]=useState(false);const[showTodoForm,setShowTodoForm]=useState(false);const[showEditForm,setShowEditForm]=useState(false);const[selectedListItems,setSelectedListItems]=useState([]);useEffect(()=>{apiClient.getLists().then(response=>{const lists=response.data.map(list=>list.id);setLists(lists);});},[]);useEffect(()=>{if(selectedList){apiClient.getTodos(selectedList).then(setSelectedListItems);}},[selectedList]);const handleItemClick=key=>{if(key==='add'){setSelectedList(null);setShowListForm(true);}else{setSelectedList(key);}};const handleButtonClick=(key,itemId,selectedList)=>{if(key==='edit'){setShowEditForm(true);}else if(key==='delete'){// Show confirmation dialog for delete action\nconst confirmDelete=window.confirm(\"Are you sure you want to delete this item?\");if(confirmDelete){// If confirmed, call the API to delete the item\napiClient.delTodo(itemId,selectedList).then(setSelectedListItems);}else{console.log(\"Delete action was canceled.\");}}};// TODO: fix any, use type from API\nconst items=lists.map(list=>({key:list,label:list}));function handleListAdded(listName){apiClient.addList(listName).then(result=>{setLists(prevItems=>[...prevItems,result]);});setShowListForm(false);}function handleTodoAdded(todoVal){if(selectedList){apiClient.addTodo(selectedList,todoVal).then(setSelectedListItems);}setShowTodoForm(false);}function handleEditSubmit(itemId,newValues){if(selectedList){apiClient.editTodo(selectedList,itemId,newValues).then(setSelectedListItems);}setShowEditForm(false);}return/*#__PURE__*/_jsxs(Layout,{style:{minHeight:'100vh'},children:[/*#__PURE__*/_jsx(Header,{style:{display:'flex',alignItems:'center',color:'white'},children:\"TODO LISTS\"}),/*#__PURE__*/_jsxs(Layout,{children:[/*#__PURE__*/_jsx(Sider,{width:200,style:{background:'black'},children:/*#__PURE__*/_jsx(Menu,{theme:\"dark\",mode:\"inline\",items:[{key:'add',label:'Add list',icon:/*#__PURE__*/_jsx(PlusOutlined,{})},...items],onClick:e=>handleItemClick(e.key)})}),/*#__PURE__*/_jsxs(Content,{style:{padding:24,margin:0,minHeight:280},children:[showListForm&&/*#__PURE__*/_jsx(ListForm,{onListAdded:handleListAdded}),selectedList&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setShowTodoForm(true),children:\"Add Todo\"}),/*#__PURE__*/_jsx(List,{dataSource:selectedListItems,renderItem:item=>/*#__PURE__*/_jsx(List.Item,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"item-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-content\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Name:\"}),\" \",item.nom,\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Description:\"}),\" \",item.description,/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Status:\"}),\" \",item.status]}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-container\",children:[/*#__PURE__*/_jsx(Button,{className:\"edit-button\",onClick:()=>handleButtonClick(\"edit\",item.id,selectedList),children:\"Edit\"}),/*#__PURE__*/_jsx(Button,{className:\"delete-button\",onClick:()=>handleButtonClick(\"delete\",item.id,selectedList),children:\"Delete\"})]}),showEditForm&&/*#__PURE__*/_jsx(EditForm,{initialValues:{nom:item.nom||'',description:item.description||'',status:item.status},onTodoSubmit:newValues=>handleEditSubmit(item.id,newValues)})]})})})]}),!selectedList&&!showListForm&&/*#__PURE__*/_jsx(\"div\",{children:\"Select a list\"}),showTodoForm&&/*#__PURE__*/_jsx(TodoForm,{onTodoAdded:handleTodoAdded})]})]})]});}","map":{"version":3,"names":["Button","Layout","List","Menu","PlusOutlined","apiClient","useEffect","useState","ListForm","TodoForm","EditForm","jsx","_jsx","jsxs","_jsxs","Header","Content","Sider","App","lists","setLists","selectedList","setSelectedList","showListForm","setShowListForm","showTodoForm","setShowTodoForm","showEditForm","setShowEditForm","selectedListItems","setSelectedListItems","getLists","then","response","data","map","list","id","getTodos","handleItemClick","key","handleButtonClick","itemId","confirmDelete","window","confirm","delTodo","console","log","items","label","handleListAdded","listName","addList","result","prevItems","handleTodoAdded","todoVal","addTodo","handleEditSubmit","newValues","editTodo","style","minHeight","children","display","alignItems","color","width","background","theme","mode","icon","onClick","e","padding","margin","onListAdded","dataSource","renderItem","item","Item","className","nom","description","status","initialValues","onTodoSubmit","onTodoAdded"],"sources":["/home/kaies/Desktop/todo-list/ui/src/App.tsx"],"sourcesContent":["import { Button, Layout, List, Menu, MenuProps } from \"antd\";\nimport { PlusOutlined } from '@ant-design/icons';\nimport { apiClient } from \"./api-client\";\nimport { useEffect, useState } from \"react\";\nimport { ListForm } from \"./ListForm\";\nimport { TodoForm } from \"./TodoForm\";\nimport { IItem, ITodoList } from '../interfaces';\nimport { EditForm } from \"./EditForm\";\nimport './Styles/Style.css';\n\nconst { Header, Content, Sider } = Layout;\n\n\ntype MenuItem = Required<MenuProps>['items'][number];\n\nexport default function App() {\n  const [lists, setLists] = useState<string[]>([]);\n  const [selectedList, setSelectedList] = useState<string | null>(null);\n  const [showListForm, setShowListForm] = useState(false);\n  const [showTodoForm, setShowTodoForm] = useState(false);\n  const [showEditForm, setShowEditForm] = useState(false);\n  const [selectedListItems, setSelectedListItems] = useState<IItem[]>([]);\n  useEffect(() => {\n    apiClient.getLists().then((response) => {\n      const lists = response.data.map((list: ITodoList) => list.id);\n      setLists(lists);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (selectedList) {\n      apiClient.getTodos(selectedList).then(setSelectedListItems);\n    }\n  }, [selectedList]);\n\n  const handleItemClick = (key: string) => {\n    if (key === 'add') {\n      setSelectedList(null);\n      setShowListForm(true);\n    } else {\n      setSelectedList(key);\n    }\n  }\n\n  const handleButtonClick = (key: string, itemId: string, selectedList: string) => {\n    if (key === 'edit') {\n      setShowEditForm(true);\n    } else if (key === 'delete') {\n      // Show confirmation dialog for delete action\n      const confirmDelete = window.confirm(\"Are you sure you want to delete this item?\");\n\n      if (confirmDelete) {\n        // If confirmed, call the API to delete the item\n        apiClient.delTodo(itemId, selectedList).then(setSelectedListItems);\n      } else {\n        console.log(\"Delete action was canceled.\");\n      }\n    }\n  }\n\n\n\n  // TODO: fix any, use type from API\n  const items: MenuItem[] = lists.map((list: string) => ({\n    key: list,\n    label: list\n  }));\n\n  function handleListAdded(listName: string): void {\n    apiClient.addList(listName).then((result) => {\n      setLists((prevItems) => [...prevItems, result])\n    });\n    setShowListForm(false);\n  }\n\n  function handleTodoAdded(todoVal: { todo: string, description: string, status: string }): void {\n    if (selectedList) {\n      apiClient.addTodo(selectedList, todoVal).then(setSelectedListItems);\n\n    }\n    setShowTodoForm(false);\n  }\n\n  function handleEditSubmit(itemId:string, newValues: { nom: string; description: string; status: import(\"../enum\").Status; }): void {\n    \n    if (selectedList) {\n      apiClient.editTodo(selectedList,itemId, newValues).then(setSelectedListItems);\n\n    }\n    setShowEditForm(false);\n\n  }\n\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Header style={{ display: 'flex', alignItems: 'center', color: 'white' }}>\n        TODO LISTS\n      </Header>\n      <Layout>\n        <Sider width={200} style={{ background: 'black' }}>\n          <Menu\n            theme=\"dark\"\n            mode=\"inline\"\n            items={[{ key: 'add', label: 'Add list', icon: <PlusOutlined /> }, ...items]}\n            onClick={(e) => handleItemClick(e.key)}\n          />\n        </Sider>\n        <Content\n          style={{\n            padding: 24,\n            margin: 0,\n            minHeight: 280,\n          }}\n        >\n          {showListForm && <ListForm onListAdded={handleListAdded} />}\n          {selectedList &&\n            <div>\n              <Button onClick={() => setShowTodoForm(true)}>Add Todo</Button>\n              <List\n                dataSource={selectedListItems}\n                renderItem={(item) => <List.Item>\n                  <div className=\"item-container\">\n                    <div className=\"text-content\">\n                      <strong>Name:</strong> {item.nom} <br />\n                      <strong>Description:</strong> {item.description}<br />\n                      <strong>Status:</strong> {item.status}\n                    </div>\n                    <div className=\"button-container\">\n                      <Button className=\"edit-button\" onClick={() => handleButtonClick(\"edit\", item.id, selectedList)}>Edit</Button>\n                      <Button className=\"delete-button\" onClick={() => handleButtonClick(\"delete\", item.id, selectedList)}>Delete</Button>\n                    </div>\n                    {showEditForm && <EditForm initialValues={{\n                      nom: item.nom || '',\n                      description: item.description || '',\n                      status: item.status,\n                    }} onTodoSubmit={(newValues) =>handleEditSubmit(item.id, newValues) } />}\n                  </div>\n\n                </List.Item>}\n              />\n            </div>\n          }\n          {!selectedList && !showListForm && <div>Select a list</div>}\n          {showTodoForm && <TodoForm onTodoAdded={handleTodoAdded} />}\n\n        </Content>\n      </Layout>\n    </Layout>\n  )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}